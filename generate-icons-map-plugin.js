const fs = require('fs');


const PLUGIN_NAME = 'GenerateIconsMapPlugin';
const ICONS_LIB_FOLDER = 'libs/icons/src/lib/svg';
const ICONS_MAP_PATH = 'libs/icons/src/lib/svg-icons.map.ts';

const generateIconsMap = (icons) => {
  let imports = '';
  icons.forEach((icon) => {
    const nameParts = icon.replace(/\.[^/.]+$/, '').split(/-|_/);
    const iconName = `${nameParts
      .map((part) => part.charAt(0).toUpperCase() + part.slice(1))
      .join('')}`;

    imports += `
  ${iconName}: () => import('./svg/${icon}'),`;
  });

  const iconsMap = `// GENERATED BY GenerateIconsMapPlugin
// DO NOT EDIT IT MANUALLY
  
export const svgIconsMap = {${imports}
} as const;
`;

  return iconsMap;
};

class GenerateIconsMapPlugin {
  apply(compiler) {
    compiler.hooks.afterCompile.tap(PLUGIN_NAME, (compilation) => {
      compilation.contextDependencies.add(ICONS_LIB_FOLDER);
    });

    compiler.hooks.watchRun.tap(PLUGIN_NAME, (compilation) => {
      if (compilation.modifiedFiles) {
        if (Array.from(compilation.modifiedFiles).includes(ICONS_LIB_FOLDER)) {
          const icons = fs.readdirSync(ICONS_LIB_FOLDER);
          const iconsMap = generateIconsMap(icons);
          fs.writeFileSync(ICONS_MAP_PATH, iconsMap);
          console.log(`[${PLUGIN_NAME}]: generated icons map`);
        }
      }
    });
  }
}

module.exports = GenerateIconsMapPlugin;
